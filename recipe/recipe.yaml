# yaml-language-server: $schema=https://raw.githubusercontent.com/prefix-dev/recipe-format/main/schema.json
schema_version: 1

context:
  version: "2.0.0"
  maturin_min: 1.1.0
  maturin_max: "2"

recipe:
  name: granian
  version: ${{ version }}

source:
  url: https://pypi.org/packages/source/g/granian/granian-${{ version }}.tar.gz
  sha256: d040c63e069ce195607530afa53fc1fd50b8e99284184f051e5bd6b4c3742081

build:
  number: 0

outputs:
  - package:
      name: granian
    build:
      script:
        - cargo-bundle-licenses --format yaml --output THIRDPARTY.yml
        - |-
          ${{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation --disable-pip-version-check
      python:
        entry_points:
          - granian = granian:cli.cli
    requirements:
      build:
        - ${{ compiler("c") }}
        - ${{ compiler("rust") }}
        - ${{ stdlib("c") }}
        - cargo-bundle-licenses
        - if: build_platform != target_platform
          then:
            - python
            - cross-python_${{ target_platform }}
            - maturin >=${{ maturin_min }},<${{ maturin_max }}
        - if: unix
          then:
            # for the jemalloc-sys crate
            - make
      host:
        - pip
        - python
        - maturin >=${{ maturin_min }},<${{ maturin_max }}
        - if: unix
          then:
            - jemalloc
      run:
        - python
        - click >=8.0.0
        - if: unix
          then:
            - uvloop >=0.18.0
      run_constraints:
        - setproctitle >=1.3.3,<1.4
        - watchfiles >=0.21,<2.0
    tests:
      - python:
          pip_check: true
          imports: granian
      - requirements:
          run:
            - pip
        script:
          - pip check
          - granian --help

  - package:
      name: granian-with-pname
    build:
      noarch: generic
    requirements:
      run:
        - ${{ pin_subpackage("granian", upper_bound="x.x.x") }}
        - setproctitle
    tests:
      - python:
          pip_check: true
          imports: granian
      - requirements:
          run:
            - pip
        script:
          - pip check
          - granian --help

  - package:
      name: granian-with-reload
    build:
      noarch: generic
    requirements:
      run:
        - ${{ pin_subpackage("granian", upper_bound="x.x.x") }}
        - watchfiles
    tests:
      - python:
          pip_check: true
          imports: granian
      - requirements:
          run:
            - pip
        script:
          - pip check
          - granian --help

  - package:
      name: granian-with-all
    build:
      noarch: generic
    requirements:
      run:
        - ${{ pin_subpackage("granian", upper_bound="x.x.x") }}
        - ${{ pin_subpackage("granian-with-pname", upper_bound="x.x.x") }}
        - ${{ pin_subpackage("granian-with-reload", upper_bound="x.x.x") }}
    tests:
      - python:
          pip_check: true
          imports: granian
      - files:
          source:
            - tests/
          recipe:
            - run_test.py
        requirements:
          run:
            - httpx >=0.25.0,<0.26
            - pytest >=7.4.2,<7.5
            - pytest-asyncio >=0.21.1,<0.22
            - websockets
            - sniffio >=1.3,<2
            - psutil
        script:
          - granian --help
          # windows tests pass, but fail on cleanup due to:
          #
          #   failed to remove directory `work\test`: Access is denied. (os error 5)
          #
          - if: unix
            then:
              - python run_test.py

about:
  homepage: https://github.com/emmett-framework/granian
  summary: A Rust HTTP server for Python applications
  repository: https://github.com/emmett-framework/granian
  license: BSD-3-Clause
  license_file:
    - LICENSE
    - THIRDPARTY.yml

extra:
  feedstock-name: granian
  recipe-maintainers:
    - thewchan
    - bollwyvl
