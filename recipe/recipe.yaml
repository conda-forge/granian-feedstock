# yaml-language-server: $schema=https://raw.githubusercontent.com/prefix-dev/recipe-format/main/schema.json
schema_version: 1

context:
  version: "2.3.2"
  maturin_min: 1.8.0
  maturin_max: "2"

recipe:
  name: granian
  version: ${{ version }}

source:
  url: https://pypi.org/packages/source/g/granian/granian-${{ version }}.tar.gz
  sha256: 434bea33a3a4f63db1e65d63a64b80ab44dd09c85421c5555d4188c05c37794d

build:
  number: 0

outputs:
  - package:
      name: granian
    build:
      script:
        - cargo-bundle-licenses --format yaml --output THIRDPARTY.yml
        - |-
          ${{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation --disable-pip-version-check
      python:
        entry_points:
          - granian = granian:cli.cli
    requirements:
      build:
        - ${{ compiler("c") }}
        - ${{ compiler("rust") }}
        - ${{ stdlib("c") }}
        - cargo-bundle-licenses
        - if: build_platform != target_platform
          then:
            - python
            - cross-python_${{ target_platform }}
            - maturin >=${{ maturin_min }},<${{ maturin_max }}
        - if: unix
          then:
            # for the jemalloc-sys crate
            - make
      host:
        - pip
        - python
        - maturin >=${{ maturin_min }},<${{ maturin_max }}
        - if: unix
          then:
            - jemalloc
      run:
        - click >=8.0.0
        - python
      run_constraints:
        - rloop >=0.1,<0.2
        - setproctitle >=1.3.3,<1.4
        - uvloop >=0.18.0
        - watchfiles >=1.0,<2.0
    tests:
      - python:
          pip_check: true
          imports: granian
      - requirements:
          run:
            - pip
        script:
          - pip check
          - granian --help

  - package:
      name: granian-with-pname
    build:
      noarch: generic
    requirements:
      run:
        - ${{ pin_subpackage("granian", upper_bound="x.x.x") }}
        - setproctitle
    tests:
      - python:
          pip_check: true
          imports: granian
      - requirements:
          run:
            - pip
        script:
          - pip check
          - granian --help

  - package:
      name: granian-with-reload
    build:
      noarch: generic
    requirements:
      run:
        - ${{ pin_subpackage("granian", upper_bound="x.x.x") }}
        - watchfiles
    tests:
      - python:
          pip_check: true
          imports: granian
      - requirements:
          run:
            - pip
        script:
          - pip check
          - granian --help

  - package:
      name: granian-with-rloop
    build:
      noarch: generic
      skip: win
    requirements:
      run:
        - ${{ pin_subpackage("granian", upper_bound="x.x.x") }}
        - rloop
    tests:
      - python:
          pip_check: true
          imports: granian
      - requirements:
          run:
            - pip
        script:
          - pip check
          - granian --help

  - package:
      name: granian-with-uvloop
    build:
      noarch: generic
      skip: win
    requirements:
      run:
        - ${{ pin_subpackage("granian", upper_bound="x.x.x") }}
        - uvloop
    tests:
      - python:
          pip_check: true
          imports: granian
      - requirements:
          run:
            - pip
        script:
          - pip check
          - granian --help

  - package:
      name: granian-with-all
    build:
      noarch: generic
    requirements:
      run:
        - ${{ pin_subpackage("granian", upper_bound="x.x.x") }}
        - ${{ pin_subpackage("granian-with-pname", upper_bound="x.x.x") }}
        - ${{ pin_subpackage("granian-with-reload", upper_bound="x.x.x") }}
    tests:
      - python:
          pip_check: true
          imports: granian
      - script:
          - granian --help
      # https://github.com/conda-forge/granian-feedstock/pull/62
      # tests disabled, always hang after completion
      # - if: unix and (build_platform == target_platform)
      #   # windows tests pass, but fail on cleanup due to:
      #   #
      #   #   failed to remove directory `work\test`: Access is denied. (os error 5)
      #   #
      #   # all linux-ppc64le and linux-aarch64 tests fail due to networking issues
      #   #
      #   #   RuntimeError: Cannot bind server
      #   #
      #   then:
      #     files:
      #       source:
      #         - tests/
      #       recipe:
      #         - run_test.py
      #     requirements:
      #       run:
      #         - if: unix
      #           then:
      #             - granian-with-rloop
      #             - granian-with-uvloop
      #         - httpx >=0.25.0,<0.26
      #         - pytest >=7.4.2,<7.5
      #         - pytest-asyncio >=0.21.1,<0.22
      #         - websockets
      #         - sniffio >=1.3,<2
      #         - psutil
      #     script:
      #       - python run_test.py

about:
  homepage: https://github.com/emmett-framework/granian
  summary: A Rust HTTP server for Python applications
  repository: https://github.com/emmett-framework/granian
  license: BSD-3-Clause
  license_file:
    - LICENSE
    - THIRDPARTY.yml

extra:
  feedstock-name: granian
  recipe-maintainers:
    - thewchan
    - bollwyvl
