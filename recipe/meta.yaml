{% set version = "1.7.3" %}

# handle undefined PYTHON in `noarch: generic` outputs
{% if PYTHON is not defined %}{% set PYTHON = "$PYTHON" %}{% endif %}   # [unix]
{% if PYTHON is not defined %}{% set PYTHON = "%PYTHON%" %}{% endif %}  # [win]

package:
  name: granian
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/g/granian/granian-{{ version }}.tar.gz
  sha256: b6a67c97b82aff03394bddfdbc7e7132f9b6e1ca1eb94d322e0861bb3c4aed98

build:
  number: 0

outputs:
  - name: granian
    build:
      script:
        - |-
          {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation --disable-pip-version-check
        - cargo-bundle-licenses --format yaml --output THIRDPARTY.yml
      entry_points:
        - granian = granian:cli.cli
    requirements:
      build:
        - {{ compiler("c") }}
        - {{ compiler("rust") }}
        - {{ stdlib("c") }}
        - cargo-bundle-licenses
        - cross-python_{{ target_platform }}  # [build_platform != target_platform]
        - maturin >=1.1.0,<2                  # [build_platform != target_platform]
        - python                              # [build_platform != target_platform]
        # for the jemalloc-sys crate
        - make                                # [unix]
      host:
        - python
        - maturin >=1.1.0,<2
        - pip
        - jemalloc                            # [unix]
      run:
        - python
        - click >=8.0.0
        - uvloop >=0.18.0  # [not win]
    test:
      imports:
        - granian
      commands:
        - pip check
        - granian --help
      requires:
        - pip

  - name: granian-with-pname
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("granian", max_pin="x.x.x") }}
        - setproctitle >=1.3.3,<1.4
    test:
      imports:
        - granian
      commands:
        - pip check
        - granian --help
      requires:
        - pip

  - name: granian-with-reload
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("granian", max_pin="x.x.x") }}
        - watchfiles >=0.21,<1.0
    test:
      imports:
        - granian
      commands:
        - pip check
        - granian --help
      requires:
        - pip

  - name: granian-with-all
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("granian", max_pin="x.x.x") }}
        - {{ pin_subpackage("granian-with-pname", max_pin="x.x.x") }}
        - {{ pin_subpackage("granian-with-reload", max_pin="x.x.x") }}
    test:
      source_files:
        - tests
      requires:
        - httpx >=0.25.0,<0.26
        - pip
        - pytest >=7.4.2,<7.5
        - pytest-asyncio >=0.21.1,<0.22
        # does not solve for py3.13 
        # - websockets >=11,<12
        - websockets
        - sniffio >=1.3,<2
      imports:
        - granian
      commands:
        - pip check
        - granian --help
        - pytest -vv --tb=long --color=yes -k "not (test_reject or (test_rsgi and test_body_stream_req) or (test_scope and workers))"

about:
  home: https://github.com/emmett-framework/granian
  summary: A Rust HTTP server for Python applications
  dev_url: https://github.com/emmett-framework/granian
  license: BSD-3-Clause
  license_file:
    - LICENSE
    - THIRDPARTY.yml

extra:
  feedstock-name: granian
  recipe-maintainers:
    - thewchan
    - bollwyvl
